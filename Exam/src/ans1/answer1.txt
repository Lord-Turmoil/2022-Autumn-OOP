第一道简答题答案。
a) 详见代码。Test 类为测试 Demo。
b) 详见代码。Test 类为测试 Demo。
c)
答：
我认为第二种方式合理一些。
由于 Java 自身不支持多重继承，因此第一种方式不能实现同一个类既做动物又做食物。采用接口的方式增强了实现的灵活性。
d)
答：
向上映射指父类引用指向子类实例，即将子类实例转换为父类类型。
向下映射指将父类引用所指向的对象实例转换为子类类型。

向上映射总是安全的，因为子类对象一定是父类对象。
而向下映射不一定安全，可能会发生抛出类型转换异常。此时需要通过 instanceof 操作符判断是否可以进行向下映射。